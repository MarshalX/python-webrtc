name: Build and publish macOS wheels
on:
  push:
    branches:
      - main
      - pypi-dev
    paths:
      - '.github/workflows/build_macos_wheels.yml'
      - 'python-webrtc/cpp/**'
      - 'CMakeLists.txt'
      - 'setup.py'
jobs:
  build_wheels_for_macos:
    name: Build and publish wheels for macOS
    runs-on: macos-latest

    strategy:
      matrix:
        arch: [
            "Intel",
            "M1",
        ]

    env:
      WEBRTC_CACHE_KEY: "1"

    steps:
      - name: Clone.
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: WebRTC cache.
        uses: actions/cache@v2
        with:
          path: third_party/libwebrtc
          key: ${{ runner.os }}-${{ matrix.arch }}-cache-webrtc-${{ env.WEBRTC_CACHE_KEY }}

      - name: Build wheels (Intel).
        if: matrix.arch == 'Intel'
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
          CIBW_BUILD: cp3*-*
          CIBW_SKIP: cp36-*
          CIBW_TEST_COMMAND: python -c "import wrtc; wrtc.ping()"

      - name: Build wheels (M1).
        if: matrix.arch == 'M1'
        uses: pypa/cibuildwheel@v2.3.1
        env:
          TARGET_ARCH: arm64
          CIBW_ARCHS: arm64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
          CIBW_BUILD: cp3*-*

      - name: Upload artifacts (${{ matrix.arch }}).
        uses: actions/upload-artifact@v2
        with:
          name: wrtc for macOS (${{ matrix.arch }})
          path: ./wheelhouse/*.whl
